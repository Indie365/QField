FIND_PACKAGE(Qt5QuickCompiler QUIET)
IF(Qt5QuickCompiler_FOUND AND NOT CMAKE_BUILD_TYPE MATCHES Debug AND NOT CMAKE_BUILD_TYPE MATCHES RelWithDebInfo)
  QTQUICK_COMPILER_ADD_RESOURCES(RESOURCES ${CMAKE_SOURCE_DIR}/src/qml/qml.qrc)
ELSE()
  SET(RESOURCES ${CMAKE_SOURCE_DIR}/src/qml/qml.qrc)
ENDIF()

SET(QML_IMPORT_PATH "${CMAKE_SOURCE_DIR}/src/qml/imports")

FILE(GLOB_RECURSE QML_SOURCES "${CMAKE_SOURCE_DIR}/src/qml/*.qml")
ADD_CUSTOM_TARGET(qfield_qml SOURCES ${QML_SOURCES})

IF (ANDROID)
  ADD_LIBRARY(qfield SHARED
    main.cpp
    ${RESOURCES}
    ${CMAKE_SOURCE_DIR}/images/images.qrc
    ${CMAKE_SOURCE_DIR}/resources/resources.qrc
    ${CMAKE_SOURCE_DIR}/i18n/translations.qrc
  )
#  ADD_DEPENDENCIES(qfield
#    assets
#  )
ELSE ()
  ADD_EXECUTABLE(qfield
    main.cpp
    ${RESOURCES}
    ${CMAKE_SOURCE_DIR}/images/images.qrc
    ${CMAKE_SOURCE_DIR}/resources/resources.qrc
    ${CMAKE_SOURCE_DIR}/i18n/translations.qrc
  )
ENDIF ()

TARGET_COMPILE_DEFINITIONS(qfield
  PRIVATE $<$<OR:$<CONFIG:Debug>,$<CONFIG:RelWithDebInfo>>:QT_QML_DEBUG>)
IF (ANDROID)
    TARGET_LINK_LIBRARIES(qfield
      android
      log
    )
ENDIF(ANDROID)

TARGET_LINK_LIBRARIES(qfield
  qfield_core
  ${QGIS_CORE_LIBRARY}
)

SET_TARGET_PROPERTIES(qfield PROPERTIES AUTORCC TRUE)

INSTALL(TARGETS qfield
  RUNTIME DESTINATION ${QFIELD_BIN_DIR}
  LIBRARY DESTINATION ${QFIELD_LIB_DIR}
  ARCHIVE DESTINATION ${QFIELD_LIB_DIR}
  FRAMEWORK DESTINATION ${QFIELD_FW_SUBDIR}
  PUBLIC_HEADER DESTINATION ${QFIELD_INCLUDE_DIR}
)
