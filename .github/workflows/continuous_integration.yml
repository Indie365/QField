name: Continuous integration

on:
  push:
    branches:
      - master
      - release-**
  pull_request:
    branches:
      - '**'
  release:
    types: ['prereleased', 'released']

jobs:
  # Run unit tests
  test:
    runs-on: ubuntu-20.04
    env:
      TX_TOKEN: ${{ secrets.TX_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup build environment
        run: |
          sudo apt update && sudo apt install -y qttools5-dev-tools qt5-default transifex-client
          sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
          git submodule update --init --recursive
          echo "::group::GitHub Event"
          cat "$GITHUB_EVENT_PATH"
          echo "" # NOTE missing newline from the GitHub event file
          echo "::endgroup::"
          ./scripts/ci/env_gh.sh

      - name: Pull Translations
        run: |
          if [[ -z "${TX_TOKEN}" ]]; then
            echo "TX_TOKEN not set, skip tx pull"
          else
            ./scripts/ci/pull_translations.sh
          fi

      - name: Test
        run: |
          ./test/test_version_number.sh
          echo "::group::Build QField"
          export QFIELD_SDK_VERSION=$(awk -F "=" '/osgeo4a_version/{print $2}' sdk.conf)
          docker-compose -f .docker/testing/docker-compose-ci.yml run qgis /usr/src/.docker/testing/build-test.sh
          echo "::endgroup::"


  # Build Android packages
  build:
    runs-on: ubuntu-20.04
    env:
      TX_TOKEN: ${{ secrets.TX_TOKEN }}
    strategy:
      matrix:
        arch: [armv7, arm64_v8a, x86, x86_64]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup signing key
        env:
          SIGNINGKEY: ${{ secrets.PLAYSTORE_SIGNINGKEY }}
        run: |
          echo "$SIGNINGKEY" | base64 --decode > ./keystore.p12
      - name: Setup build environment
        run: |
          sudo apt update && sudo apt install -y qttools5-dev-tools qt5-default transifex-client
          sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
          git submodule update --init --recursive
          ./scripts/ci/env_gh.sh
          pip install wheel
      - name: "🌍 Pull Translations"
        run: |
          if [[ -z "${TX_TOKEN}" ]]; then
            echo "TX_TOKEN not set, skip tx pull"
          else
            ./scripts/ci/pull_translations.sh
          fi
      - name: Build
        env:
          ARCH: ${{ matrix.arch }}
          KEYNAME: qfield
          KEYPASS: ${{ secrets.KEYPASS }}
          STOREPASS: ${{ secrets.STOREPASS }}
        run: |
          export QFIELD_SDK_VERSION=$(awk -F "=" '/osgeo4a_version/{print $2}' sdk.conf)
          export ANDROID_NDK_PLATFORM=android-29
          ./scripts/ci/docker_pull.sh
          ./scripts/ci/build.sh
      - name: 🍺 Deploy
        run: |
          ./scripts/ci/upload_artifacts.sh
        env:
          ID_RSA: ${{ secrets.ID_RSA }}
          DEV_UPLOAD_USER: ${{ secrets.DEV_UPLOAD_USER }}
          DEV_UPLOAD_HOST: download.opengis.ch
          ARCH: ${{ matrix.arch }}

      - name: Upload release assets
        uses: AButler/upload-release-assets@v2.0
        if: ${{ github.event_name == 'release' }}
        with:
          files: /tmp/qfield-*.apk
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ env.CI_TAG }}

  comment_pr:
    runs-on: ubuntu-20.04
    needs: build
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Vars
        id: vars
        run: |
          ./scripts/ci/env_gh.sh
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@master
        with:
          GITHUB_TOKEN: ${{ secrets.FAIRY_TOKEN }}
          message: |
            🎉 Ta-daaa, freshly created APKs are available for ${{ github.event.pull_request.head.sha }}:
              - [**arm64_v8a**](https://download.opengis.ch/qfield/ci-builds/qfield-dev-${{ steps.vars.outputs.CI_UPLOAD_ARTIFACT_ID}}-${{ steps.vars.outputs.CI_COMMIT }}-arm64_v8a.apk)

            Other architectures: [armv7](https://download.opengis.ch/qfield/ci-builds/qfield-dev-${{ steps.vars.outputs.CI_UPLOAD_ARTIFACT_ID}}-${{ steps.vars.outputs.CI_COMMIT }}-armv7.apk), [x86_64](https://download.opengis.ch/qfield/ci-builds/qfield-dev-${{ steps.vars.outputs.CI_UPLOAD_ARTIFACT_ID}}-${{ steps.vars.outputs.CI_COMMIT }}-x86_64.apk), [x86](https://download.opengis.ch/qfield/ci-builds/qfield-dev-${{ steps.vars.outputs.CI_UPLOAD_ARTIFACT_ID}}-${{ steps.vars.outputs.CI_COMMIT }}-x86.apk)
  comment_commit:
    runs-on: ubuntu-20.04
    needs: build
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Comment commit
        uses: peter-evans/commit-comment@v1
        with:
          token: ${{ secrets.FAIRY_TOKEN }}
          body: |
            🎉 Ta-daaa, freshly created APKs are available:
              - [**arm64_v8a**](https://download.opengis.ch/qfield/ci-builds/qfield-dev-${{ steps.vars.outputs.CI_UPLOAD_ARTIFACT_ID}}-${{ steps.vars.outputs.CI_COMMIT }}-arm64_v8a.apk)

            Other architectures: [armv7](https://download.opengis.ch/qfield/ci-builds/qfield-dev-${{ steps.vars.outputs.CI_UPLOAD_ARTIFACT_ID}}-${{ steps.vars.outputs.CI_COMMIT }}-armv7.apk), [x86_64](https://download.opengis.ch/qfield/ci-builds/qfield-dev-${{ steps.vars.outputs.CI_UPLOAD_ARTIFACT_ID}}-${{ steps.vars.outputs.CI_COMMIT }}-x86_64.apk), [x86](https://download.opengis.ch/qfield/ci-builds/qfield-dev-${{ steps.vars.outputs.CI_UPLOAD_ARTIFACT_ID}}-${{ steps.vars.outputs.CI_COMMIT }}-x86.apk)

  cleanup:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Spring Cleaning
        run: |
          if [[ -z "${ID_RSA}" ]]; then
            echo "ID_RSA not set, skip cleaning"
          else
            echo "${ID_RSA}" > /tmp/id_rsa
            chmod 400 /tmp/id_rsa
            ssh -i /tmp/id_rsa -o "StrictHostKeyChecking no" ${DEV_UPLOAD_USER}@${DEV_UPLOAD_HOST} "find download.opengis.ch/qfield/ci-builds/ -name '*.apk' -mtime +30 -exec rm {} \;"
            rm /tmp/id_rsa
          fi
        env:
          ID_RSA: ${{ secrets.ID_RSA }}
          DEV_UPLOAD_USER: ${{ secrets.DEV_UPLOAD_USER }}
          DEV_UPLOAD_HOST: download.opengis.ch
